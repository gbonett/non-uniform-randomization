
R version 3.0.1 Patched (2013-05-26 r62815) -- "Good Sport"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: amd64-portbld-freebsd9.1 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # Covar Selection with treatment effect interaction
> N<-30
> size<-20000
> delta<-1
> mat3<-c()
> mat2<-c()
> mat1<-c()
> 
> for(i in 1:size){
+ 
+   priority <- runif(N)
+   random <- runif(N)
+   assignment <- priority>=random
+   outcome <- rnorm(N)
+   outcome[assignment]<-outcome[assignment]+delta*(1-priority[assignment])
+ 
+   #generate linear model
+   ss3_lm <- lm(outcome ~ assignment + priority + assignment*priority)
+   ss2_lm <- lm(outcome ~ assignment + priority)
+   ss1_lm <- lm(outcome ~ assignment)
+   mat3<-rbind(mat3,summary(ss3_lm)$coef[,1]/summary(ss3_lm)$coef[,2])
+   mat2<-rbind(mat2,summary(ss2_lm)$coef[,1]/summary(ss2_lm)$coef[,2])
+   mat1<-rbind(mat1,summary(ss1_lm)$coef[,1]/summary(ss1_lm)$coef[,2])
+ 
+ }
> 
> names(coef(lm))
[1] "(Intercept)"             "assignmentTRUE"         
[3] "priority"                "assignmentTRUE:priority"
>  mean(mat3[,1])
[1] 0.002470841
>  mean(mat3[,2])
[1] 1.081518
>  mean(mat3[,3])
[1] -0.003898222
>  mean(mat3[,4])
[1] -0.6080734
>  
>  mean(mat2[,1])
[1] 0.443475
>  mean(mat2[,2])
[1] 1.110836
>  mean(mat2[,3])
[1] -0.6380304
> 
>  mean(mat1[,1])
[1] -0.001398768
>  mean(mat1[,2])
[1] 0.9115919
> 
> 
> 
> #Random Selection with treatment effect interaction
> N<-30
> size<-20000
> delta<-1
> mat3<-c()
> mat2<-c()
> mat1<-c()
> 
> for(i in 1:size){
+ 
+   priority <- runif(N)
+   random <- runif(N)
+   coinflip <- c(rep(.5,times=30))
+   #selection uses coinflip, not priority score
+   assignment <- coinflip>=random
+   outcome <- rnorm(N)
+   outcome[assignment]<-outcome[assignment]+delta*(1-priority[assignment])
+ 
+   #generate linear model
+   ss3_lm <- lm(outcome ~ assignment + priority + assignment*priority)
+   ss2_lm <- lm(outcome ~ assignment + priority)
+   ss1_lm <- lm(outcome ~ assignment)
+   mat3<-rbind(mat3,summary(ss3_lm)$coef[,1]/summary(ss3_lm)$coef[,2])
+   mat2<-rbind(mat2,summary(ss2_lm)$coef[,1]/summary(ss2_lm)$coef[,2])
+   mat1<-rbind(mat1,summary(ss1_lm)$coef[,1]/summary(ss1_lm)$coef[,2])
+ 
+ }
> 
> names(coef(lm))
[1] "(Intercept)"             "assignmentTRUE"         
[3] "priority"                "assignmentTRUE:priority"
> mean(mat3[,1])
[1] 0.0007577372
> mean(mat3[,2])
[1] 1.324222
> mean(mat3[,3])
[1] -0.0006743287
> mean(mat3[,4])
[1] -0.7553712
>  
> mean(mat2[,1])
[1] 0.5966483
> mean(mat2[,2])
[1] 1.341616
> mean(mat2[,3])
[1] -0.7783052
> 
> mean(mat1[,1])
[1] -0.001426007
> mean(mat1[,2])
[1] 1.351898
> 
> proc.time()
   user  system elapsed 
301.639   3.285 305.923 
