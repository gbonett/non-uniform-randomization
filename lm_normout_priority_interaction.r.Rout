
R version 3.0.1 Patched (2013-05-26 r62815) -- "Good Sport"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: amd64-portbld-freebsd9.1 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # Covar Selection with treatment effect interaction
> N<-30
> size<-100000
> delta<-1
> 
> tstat3<-c()
> tstat2<-c()
> tstat1<-c()
> 
> the_coef3<-c()
> the_coef2<-c()
> the_coef1<-c()
> 
> for(i in 1:size){
+ 
+   priority <- runif(N)
+   random <- runif(N)
+   assignment <- priority>=random
+   outcome <- rnorm(N)
+   outcome <- outcome + priority
+   outcome[assignment]<-outcome[assignment]+delta*priority[assignment]
+ 
+   #generate linear models
+   ss3_lm <- lm(outcome ~ assignment + priority + assignment*priority)
+   ss2_lm <- lm(outcome ~ assignment + priority)
+   ss1_lm <- lm(outcome ~ assignment)
+ 
+   #calculate T statistic for each linear model
+   tstat3<-rbind(tstat3,summary(ss3_lm)$coef[,1]/summary(ss3_lm)$coef[,2])
+   tstat2<-rbind(tstat2,summary(ss2_lm)$coef[,1]/summary(ss2_lm)$coef[,2])
+   tstat1<-rbind(tstat1,summary(ss1_lm)$coef[,1]/summary(ss1_lm)$coef[,2])
+ 
+   #coefficiencts for each linear model
+   the_coef3<-rbind(the_coef3,summary(ss3_lm)$coef[,1])
+   the_coef2<-rbind(the_coef2,summary(ss2_lm)$coef[,1])
+   the_coef1<-rbind(the_coef1,summary(ss1_lm)$coef[,1])
+ 
+ }
> 
> cat("Case with correlation and interaciton effect. \n \n")
Case with correlation and interaciton effect. 
 
> 
> cat("Output from non-uniform randomization experimental design \n")
Output from non-uniform randomization experimental design 
> 
> cat("Model 3 contains:      ", names(coef(ss3_lm)), "\n" )
Model 3 contains:       (Intercept) assignmentTRUE priority assignmentTRUE:priority 
> cat("Model 3 coef estimates:", sprintf("%1.6f",colMeans(the_coef3)) , "\n" )
Model 3 coef estimates: -0.000227 0.000700 0.999298 1.001839 
> cat("Model 3 t statistics:  ", sprintf("%1.6f",colMeans(tstat3)), "\n \n" )
Model 3 t statistics:   -0.000758 0.000597 0.892346 0.608453 
 
> 
> 
> cat("Model 2 contains:      ", names(coef(ss2_lm)), "\n" )
Model 2 contains:       (Intercept) assignmentTRUE priority 
> cat("Model 2 coef estimates:", sprintf("%1.6f", colMeans(the_coef2)) , "\n" )
Model 2 coef estimates: -0.164672 0.501686 1.499588 
> cat("Model 2 t statistics:  ", sprintf("%1.6f", colMeans(tstat2)), "\n \n" )
Model 2 t statistics:   -0.442062 1.107017 1.898843 
 
> 
> 
> cat("Model 1 contains:      ", names(coef(ss1_lm)), "\n" )
Model 1 contains:       (Intercept) assignmentTRUE 
> cat("Model 1 coef estimates:", sprintf("%1.6f", colMeans(the_coef1)) , "\n" )
Model 1 coef estimates: 0.333215 1.001387 
> cat("Model 1 t statistics:  ", sprintf("%1.6f", colMeans(tstat1)), "\n \n" )
Model 1 t statistics:   1.237767 2.598255 
 
> 
> 
> #Random Selection with treatment effect interaction
> N<-30
> size<-100000
> delta<-1
> 
> tstat3<-c()
> tstat2<-c()
> tstat1<-c()
> 
> the_coef3<-c()
> the_coef2<-c()
> the_coef1<-c()
> 
> for(i in 1:size){
+ 
+   priority <- runif(N)
+   random <- runif(N)
+   coinflip <- c(rep(.5,times=30))
+   #selection uses coinflip, not priority score
+   assignment <- coinflip>=random
+   outcome <- rnorm(N)
+   outcome <- outcome + priority
+   outcome[assignment]<-outcome[assignment]+delta*priority[assignment]
+ 
+   #generate linear model
+   ss3_lm <- lm(outcome ~ assignment + priority + assignment*priority)
+   ss2_lm <- lm(outcome ~ assignment + priority)
+   ss1_lm <- lm(outcome ~ assignment)
+ 
+   #calculate T statistic for each linear model
+   tstat3<-rbind(tstat3,summary(ss3_lm)$coef[,1]/summary(ss3_lm)$coef[,2])
+   tstat2<-rbind(tstat2,summary(ss2_lm)$coef[,1]/summary(ss2_lm)$coef[,2])
+   tstat1<-rbind(tstat1,summary(ss1_lm)$coef[,1]/summary(ss1_lm)$coef[,2])
+ 
+   #coefficiencts for each linear model
+   the_coef3<-rbind(the_coef3,summary(ss3_lm)$coef[,1])
+   the_coef2<-rbind(the_coef2,summary(ss2_lm)$coef[,1])
+   the_coef1<-rbind(the_coef1,summary(ss1_lm)$coef[,1])
+ 
+ }
> 
> 
> cat("Output from traditional experimental design \n")
Output from traditional experimental design 
> cat("Model 3 contains:      ", names(coef(ss3_lm)), "\n" )
Model 3 contains:       (Intercept) assignmentTRUE priority assignmentTRUE:priority 
> cat("Model 3 coef estimates:", sprintf("%1.6f", colMeans(the_coef3)) , "\n" )
Model 3 coef estimates: -0.000438 0.001631 1.000247 0.997410 
> cat("Model 3 t statistics:  ", sprintf("%1.6f", colMeans(tstat3)), "\n \n" )
Model 3 t statistics:   -0.000837 0.000901 1.099525 0.754177 
 
> 
> 
> cat("Model 2 contains:      ", names(coef(ss2_lm)), "\n" )
Model 2 contains:       (Intercept) assignmentTRUE priority 
> cat("Model 2 coef estimates:", sprintf("%1.6f", colMeans(the_coef2)) , "\n" )
Model 2 coef estimates: -0.250004 0.499992 1.498901 
> cat("Model 2 t statistics:  ", sprintf("%1.6f", colMeans(tstat2)), "\n \n" )
Model 2 t statistics:   -0.595695 1.348076 2.325018 
 
> 
> 
> cat("Model 1 contains:      ", names(coef(ss1_lm)), "\n" )
Model 1 contains:       (Intercept) assignmentTRUE 
> cat("Model 1 coef estimates:", sprintf("%1.6f", colMeans(the_coef1)) , "\n" )
Model 1 coef estimates: 0.499439 0.500175 
> cat("Model 1 t statistics:  ", sprintf("%1.6f", colMeans(tstat1)), "\n \n" )
Model 1 t statistics:   1.803581 1.259976 
 
> 
> 
> proc.time()
    user   system  elapsed 
5342.955  231.908 5623.040 
